pypet 0.1b.4

*   Annotations and Results now support __setitem__, which is analogue to `f_get` and `f_set`


pypet 0.1b.3

*   BUG FIX: Now `f_run` and `f_continue_run` of an environment return the results
    produced by `runfunc`

*   You can enforce a type convert for exploration

*   Added lazy_debug option for the environment

*   If you don't specify a filename, the environment defaults to a file with the name of
    the trajectory

*   New multiprocessing mode (`use_pool=False` for environment) to spawn individual processes
    for each run. Useful if data cannot be pickled.

*   New Brian framework with NetworkManager, NetworkComponent, NetworkAnalyser,
    NetworkRunner and DurationParameter


pypet 0.1b.2

*   DefaultReplacementError is now called PresettingError

*   Now the runtime of single runs is measured and stored.

*   __getitem__ of the trajectory always returns the instance and fast access is not applied

*   PickleResult and PickleParameter support the choice of protocol

*   Explored Sparse matrices are stored under a slightly different name to disk.

*   BUG FIX: BFS works properly

*   BUG FIX: f_iter_runs is now affected if f_as_run is chosen

*   Annotations support __iter__

*   Annotations support __getitem__

*   BrianMonitorResult, the property and columne 'times' for the Spike and StateSpikeMonitor
    has been renamed 'spiketimes'.

*   Results support __iter__

*   BrianMonitorResult, the name of state variables in array mode
    is changed to varname+'_%Xd', instead of varname+'_idx%08d', and 'spiketimes_%08d' to
    'spiketimes_%Xd' and X is chosen in accordance with the number of neurons

*   BUG FIX: nested_equal now supports Object Tables containing numpy arrays

*   Better categorizations of the utility functions

*   Comments are no longer limited in size

*   New Brian Result

*   Storage Service in case of purging now sets the comment to the result with the lowest index,
    in case of multiprocessing.

*   Old API names are kept, but emit a depricated warning.

*   The exploration array is now termed range. Accordingly, the function `f_is_array` is
    renamed `f_has_range` and `f_get_array` renamed to `f_get_range`.

*   v_leaf renamed to v_is_leaf

*   f_is_root renamed to v_is_root and changed to property

*   v_fast_accessible renamed to f_supports_fast_access and changed to function

*   v_parameter changed to v_is_parameter


pypet 0.1b.1

*   Support for `long` types

*   Documentation for the `f_find_idx` function

*   The parameters `trajectory_name` and `trajectory_index` in f_load have been renamed to
    `name` and `index`


pypet 0.1b.0

*   Group nodes support __getitem__

*   SparseResult

*   If you merge trajectory, all environment settings of both are kept.

*   More information about the environment is added to the trajectory

*   BUG FIX:

    Recall of trajectory comments from diks yielded numpy strings instead of python strings
    This could cause trouble if the comment is empty!

*   Git Integration, you can now make autocommits for every experiment

*   New Sparse Parameter, for scipy sparse matrices

*   BUG FIX: Loading of Trajectory metadata, now v_time is loaded correctly

*   BUG FIX: Expand no longer repeats already run experiments

*   More fine grain overview tables

*   Comments for runs are only added once and not every run

*   The overview tables are now found in the group `overview`

*   Test are operating in a temp directory

*   Now you can have fast access with result if they contain only a single entry with the name of
    the result

*   New trajectory function `f_as_run` that makes the trajectory belief it is a particular
    single run and results and derived parameters of other runs are blinded out.


pypet 0.1a.6

*   BUG FIX: (HDF5StorageService): storing a trajectory several times increased run and info table


pypet 0.1a.5

*   Removed unnecessary imports
*   Better documentation


pypet 0.1a.4

*   Adding positional results will add them with the result name


pypet 0.1a.3

*   Better handling of filenames, now relative paths are considered


pypet 0.1a.2

*   Added automatic version grapping in setup.py


pypet 0.1a.1

*   BaseParameter supports now __getitem__ if it is an array